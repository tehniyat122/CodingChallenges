 /*
 Given the tree:
        4
       / \
      2   7
     / \
    1   3

And the value to search: 2
You should return this subtree:

      2     
     / \   
    1   3
In the example above, if we want to search the value 5, since there is no node with value 5, we should return NULL.

Note that an empty tree is represented by NULL, therefore you would see the expected output (serialized tree format) as [], not null.
 */
 
 
class Solution {
public:
    TreeNode* searchBST(TreeNode* root, int val) {
        //cout<< "root->data: "<<root->val<<endl;
        if(root == NULL)
        {   
            return NULL;       
        }
        if(root->val == val)
        {   
            return root;       
        }
        if (root->val > val)
        {
            return searchBST(root->left, val);
        }
        return searchBST( root->right,val);
    }
};
